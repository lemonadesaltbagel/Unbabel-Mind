import {Router} from 'express';
import {authenticateToken} from '../middleware/auth';
import https from 'https';
const r=Router();
r.post('/',authenticateToken,async(req,res)=>{try{const {prompt}=req.body;if(!prompt){res.status(400).json({error:'Prompt is required'});return;}const openaiToken=process.env.OPENAI_API_KEY;if(!openaiToken){res.status(400).json({error:'OpenAI API key not configured'});return;}const postData=JSON.stringify({model:'gpt-3.5-turbo',messages:[{role:'user',content:prompt}],max_tokens:1000});const options={hostname:'api.openai.com',port:443,path:'/v1/chat/completions',method:'POST',headers:{'Authorization':`Bearer ${openaiToken}`,'Content-Type':'application/json','Content-Length':Buffer.byteLength(postData)}};const req2=https.request(options,(res2)=>{let data='';res2.on('data',(chunk)=>{data+=chunk;});res2.on('end',()=>{try{const jsonData=JSON.parse(data);res.json({generated_text:jsonData.choices[0]?.message?.content||'No response from AI'});}catch(e){res.status(500).json({error:'Invalid response from OpenAI'});}});});req2.on('error',(e)=>{console.error('Request error:',e);res.status(500).json({error:'Request failed'});});req2.write(postData);req2.end();}catch(e){console.error('Review AI error:',e);res.status(500).json({error:'Internal server error'});}});
export default r;

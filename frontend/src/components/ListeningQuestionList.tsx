import{Question,Answers}from'@/types/reading';
import{hs,hf}from'@/utils/reading';
type Props={questions:Question[];answers:Answers;setAnswers:(a:Answers)=>void;};
export default function ListeningQuestionList({questions,answers,setAnswers}:Props){
const hsa=(n:number,o:string,m:boolean)=>setAnswers(hs(n,o,m,answers));
const hfa=(n:number,v:string)=>setAnswers(hf(n,v,answers));
return(<div className="bg-white p-6 rounded-b-xl shadow w-full h-[80vh] overflow-y-auto"><h2 className="text-xl font-bold mb-4">Questions</h2><ol className="space-y-6 text-sm">{questions.map((q,i)=>{if(q.type==='intro')return<div key={`intro-${i}`} className="text-base font-semibold mb-3 whitespace-pre-line">{q.text}</div>;if(q.type==='subheading')return<div key={`subheading-${i}`} className="font-semibold mb-2">{q.text}</div>;if(q.type==='fill-in-line')return(<li key={`fill-${q.number}`}><div className="mb-2">{q.text.split('____').map((part,j,arr)=>(<span key={j}>{part}{j<arr.length-1&&<input type="text" className="inline-block w-40 border border-gray-400 rounded px-2 py-1 mx-1" value={answers[q.number]?.[0]||''} placeholder="â€”" onChange={e=>hfa(q.number,e.target.value)}/>}</span>))}</div></li>);return(<li key={`q-${q.number}`}><div className="mb-2">{q.number}. <span>{q.question}</span></div><div className="flex flex-wrap gap-4">{q.options.map((o)=>(<label key={o} className="flex items-center gap-2"><input type={q.type==='multi'?'checkbox':'radio'} name={`q-${q.number}`} value={o} checked={answers[q.number]?.includes(o)||false} onChange={()=>hsa(q.number,o,q.type==='multi')} className="mr-2"/><span>{o}</span></label>))}</div></li>);})}</ol></div>);
}
